{
  "name": "figma-ai-ticket-generator",
  "version": "1.0.0",
  "description": "Figma plugin to generate Jira tickets using AI from design frames",
  "type": "module",
  "main": "dist/code.js",
  "scripts": {
    "start": "cd server && node server.js",
    "start:stable": "cd server && node server.js",
    "start:dev": "cd server && PORT=3001 npx tsx src/server.ts",
    "dev:all": "node dev-start.js",
    "dev:watch": "nodemon --watch server/server.js --watch code.ts --watch ui/ --exec 'npm run build && node dev-start.js'",
    "deploy": "./scripts/deploy-production.sh",
    "bundle": "./scripts/bundle-production.sh",
    "validate:prod": "./scripts/validate-production.sh",
    "test:e2e": "./scripts/test-e2e.sh",
    "build": "./scripts/build.sh",
    "build:ts": "tsc",
    "watch": "tsc --watch",
    "dev": "npm run watch",
    "clean": "rm -rf dist",
    "lint": "eslint 'src/**/*.ts' 'code*.ts' --fix",
    "test": "npm run test:unit",
    "test:unit": "node tests/unit/test-tech-stack-parsing.js",
    "test:integration": "cd tests/integration && find . -name '*.js' -exec node {} \\;",
    "test:integration:mcp": "node tests/integration/test-standalone.mjs",
    "test:system": "cd tests/system && find . -name '*.js' -exec node {} \\;",
    "test:live": "cd tests/live && find . -name '*.html' -exec echo 'Open {} in browser to test' \\;",
    "test:performance": "cd tests/performance && find . -name '*.js' -o -name '*.mjs' -exec node {} \\;",
    "test:performance:benchmarks": "node tests/performance/test-performance-benchmarking.mjs",
    "test:e2e:workflow": "node tests/integration/test-end-to-end-workflow.mjs",
    "test:visual:context": "node tests/unit/test-visual-context-validation.mjs",
    "test:browser": "./scripts/pre-test-check.sh --continue --reporter=list",
    "test:browser:headed": "./scripts/pre-test-check.sh --continue --headed --reporter=list",
    "test:browser:ui": "./scripts/pre-test-check.sh --continue --ui",
    "test:browser:smoke": "./scripts/pre-test-check.sh --continue --grep '@smoke' --reporter=list",
    "test:browser:critical": "./scripts/pre-test-check.sh --continue --grep '@critical' --reporter=list",
    "test:browser:core": "./scripts/pre-test-check.sh --continue tests/core-functionality.spec.js --reporter=list",
    "test:browser:quick": "./scripts/pre-test-check.sh --continue tests/core-functionality.spec.js --grep 'should load the enhanced UI' --reporter=list",
    "test:browser:unsafe": "cd browser-tests && npx playwright test --reporter=list",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:system && npm run test:browser:smoke",
    "test:all:verbose": "echo 'Running all test suites...' && npm run test:unit && npm run test:integration && npm run test:system && npm run test:browser",
    "test:all:quick": "npm run test:unit && npm run test:browser:quick",
    "test:phase5": "./scripts/run-phase5-tests.sh",
    "test:phase5:comprehensive": "./scripts/run-phase5-tests.sh",
    "test:watch": "echo 'Watch mode: nodemon tests/core-tests.js (install nodemon if needed)'",
    "test:standalone": "node tests/integration/test-standalone.mjs",
    "test:mcp": "node tests/integration/test-standalone.mjs",
    "test:data:ui": "echo 'ðŸ§ª Opening Data Layer Test UI...' && python3 -m http.server 8083 --bind localhost > /dev/null 2>&1 & sleep 2 && open http://localhost:8083/test-figma-integration.html",
    "test:ui": "npm run test:data:ui",
    "health": "./scripts/health-check.sh",
    "health:start": "./scripts/health-check.sh --start-servers",
    "pretest:browser": "./scripts/pre-test-check.sh",
    "validate": "npm run test:all && npm run build && echo 'âœ… All validation passed'",
    "validate:quick": "npm run test:all:quick && npm run build && echo 'âœ… Quick validation passed'",
    "server:setup": "cd server && ./setup.sh",
    "server:install": "cd server && npm install",
    "server:build": "cd server && npm run build",
    "server:dev": "cd server && npm run dev",
    "server:test": "cd server && npm test",
    "mcp:setup": "cd server && ./setup.sh",
    "mcp:install": "cd server && npm install",
    "mcp:build": "cd server && npm run build",
    "mcp:dev": "cd server && npm run dev",
    "mcp:test": "cd server && npm test"
  },
  "keywords": [
    "figma",
    "plugin",
    "jira",
    "ai",
    "automation",
    "ticket",
    "openai"
  ],
  "author": "David G Smith",
  "license": "MIT",
  "devDependencies": {
    "@eslint/js": "^9.37.0",
    "@figma/plugin-typings": "^1.118.0",
    "@types/node": "^24.9.1",
    "@typescript-eslint/eslint-plugin": "^8.46.1",
    "@typescript-eslint/parser": "^8.46.1",
    "eslint": "^9.37.0",
    "nodemon": "^3.1.10",
    "playwright": "^1.56.1",
    "typescript": "^5.0.0"
  },
  "figma": {
    "manifest": "manifest.json",
    "main": "dist/code.js",
    "ui": "dist/ui/index.html"
  }
}
