template_id: "jira_code_simple_aem"
version: "2.1.0"
organization: "default"
platform: "jira"
description: "Simple Jira ticket template for AEM component development with HTL, OSGi, and Touch UI"

variables:
  project_name: "{{ project.name }}"
  component_name: "{{ figma.component_name }}"
  issue_type: "Task"
  component_type: "{{ project.component_type }}"
  priority: "{{ calculated.priority }}"
  assignee: "{{ team.assignee }}"
  reporter: "{{ user.name }}"
  labels: "{{ project.labels }}"
  technologies: "{{ project.tech_stack }}"
  story_points: "{{ calculated.story_points }}"
  figma_url: "{{ figma.live_link }}"
  design_status: "{{ figma.design_status }}"

team_standards:
  testing_framework: "junit-mockito"
  accessibility_level: "wcag-aa"
  documentation_format: "markdown"
  code_style: "aem-coding-standards"
  review_process: "adobe-standards"

output_format:
  ticket_type: "Story"
  sections: ["header", "description", "technical_requirements", "implementation_notes", "testing_strategy", "design_reference", "estimation"]
  formatting:
    use_emojis: true
    include_diagrams: false
    code_highlighting: true
    table_formatting: true
    link_formatting: true
  ai_context_markers: true
  include_metadata: true

customization:
  include_ai_context_markers: true
  generate_test_files: true
  create_storybook_stories: false
  add_accessibility_checklist: true
  include_performance_metrics: false
  enable_automated_testing: true
  include_design_tokens: true
  add_similar_components: true
  include_risk_assessment: true
content: |
  # 🏗️ AEM Component: {{ component_name }}
  
  **Priority**: {{ priority }} | **Story Points**: {{ story_points }}
  
  **🔗 Figma Design**: [View Component]({{ figma_url }})
  **🎯 AEM Implementation**: {{ technologies }}
  
  ## 🎯 Objective
  Implement the **{{ component_name }}** AEM component from the design specifications using HTL, OSGi, and Touch UI components.
  
  ## 🛠️ Technical Requirements
  - **Platform**: Adobe Experience Manager 6.5
  - **Template Engine**: HTL (HTML Template Language)
  - **Framework**: Apache Sling
  - **Architecture**: OSGi bundles
  - **Repository**: JCR (Java Content Repository)
  - **UI**: Touch UI components
  
  ## 📐 AEM Component Structure
  ```
  /apps/project/components/{{component_name}}/
  ├── .content.xml              # Component definition
  ├── {{component_name}}.html   # HTL template
  ├── dialog.xml               # Author dialog
  ├── clientlibs/              # CSS/JS resources
  └── README.md                # Component documentation
  ```
  
  ## ✅ Acceptance Criteria
  
  ✅ **HTL Template**: Clean HTL markup following best practices
  
  ✅ **Touch UI Dialog**: Intuitive authoring experience
  
  ✅ **OSGi Service**: Backend logic if required
  
  ✅ **Client Libraries**: Optimized CSS/JS delivery
  
  ✅ **Responsive**: Works across all breakpoints
  
  ✅ **Accessibility**: WCAG 2.1 AA compliance
  
  ## 🧪 Testing Strategy
  
  **Framework**: AEM Testing Framework + JUnit
  **Test Types**: Unit tests, integration tests, UI tests
  **Coverage**: HTL rendering, dialog functionality, responsive behavior
  
  **Example Test Structure**:
  ```java
  @Test
  public void testComponentRendering() {
      // Test HTL template rendering
  }
  
  @Test
  public void testDialogFunctionality() {
      // Test author dialog
  }
  
  @Test
  public void testResponsiveDesign() {
      // Test breakpoint behavior
  }
  ```
  
  ## 📋 Implementation Checklist
  - [ ] Create component structure in `/apps/project/components/`
  - [ ] Implement HTL template with proper data-sly-* attributes
  - [ ] Configure Touch UI dialog with required fields
  - [ ] Add client library category and dependencies
  - [ ] Implement responsive CSS using AEM Grid
  - [ ] Add proper caching headers and OSGi configuration
  - [ ] Write unit tests for component logic
  - [ ] Test in AEM author and publish environments
  - [ ] Validate accessibility with axe-core
  - [ ] Document component usage and properties