template_id: "jira_component_development"
version: "2.1.0"
organization: "default"
platform: "jira"
description: "Professional Jira ticket template following standard format with variable substitution"

variables:
  project_name: "{{ project.name }}"
  component_name: "{{ figma.component_name }}"
  issue_type: "Task"
  component_type: "{{ project.component_type }}"
  priority: "{{ calculated.priority }}"
  assignee: "{{ team.assignee }}"
  reporter: "{{ user.name }}"
  labels: "{{ project.labels }}"
  technologies: "{{ project.tech_stack }}"
  story_points: "{{ calculated.story_points }}"
  figma_url: "{{ figma.live_link }}"
  screenshot_filename: "{{ figma.screenshot_filename }}"
  design_status: "{{ figma.design_status }}"

team_standards:
  testing_framework: "jest-rtl"
  accessibility_level: "wcag-aa"
  documentation_format: "markdown"
  code_style: "prettier"
  review_process: "design-review"

output_format:
  ticket_type: "Story"
  sections: ["header", "description", "technical_requirements", "implementation_notes", "testing_strategy", "design_reference", "estimation"]
  formatting:
    use_emojis: false
    include_diagrams: false
    code_highlighting: true
    table_formatting: true
    link_formatting: true
  ai_context_markers: true
  include_metadata: true

customization:
  include_ai_context_markers: true
  generate_test_files: true
  create_storybook_stories: true
  add_accessibility_checklist: true
  include_performance_metrics: false
  enable_automated_testing: true
  include_design_tokens: true
  add_similar_components: true
  include_risk_assessment: true

# Template content following exact Jira format
content: |
  ## Jira Ticket

  **Project:** {{ project_name }}  
  **Issue Type:** {{ issue_type }}  
  **Summary:** {{ component_name }} Component Implementation  
  **Component:** {{ component_type }}  
  **Priority:** {{ priority }}  
  **Assignee:** {{ assignee }}  
  **Reporter:** {{ reporter }}  
  **Labels:** {{ labels }}

  ---

  ### **Description**
  Implement the {{ component_name }} component based on the Figma design specifications to enhance our design system capabilities.

  **Business Goal:**  
  Provide users with a consistent, accessible {{ component_name }} component that follows our design system standards and improves the overall user experience.

  **Technical Summary:**  
  Build a reusable {{ component_name }} component using {{ technologies }} with proper TypeScript interfaces, comprehensive testing, and design system integration.

  ---

  ### **Technical Requirements**
  - [ ] Create {{ component_name }} component with proper TypeScript interfaces  
  - [ ] Implement responsive design following breakpoint standards  
  - [ ] Integrate with existing design system tokens  
  - [ ] Add comprehensive accessibility features (ARIA labels, keyboard navigation)
  - [ ] Ensure cross-browser compatibility

  **Dependencies:**  
  - Design system tokens library
  - Component testing utilities
  - Accessibility testing tools
  - {{ figma_url }}

  **Acceptance Criteria:**
  - [ ] Component renders correctly with all specified props
  - [ ] All interactive states work as designed (hover, focus, disabled)
  - [ ] Component passes accessibility audit (WCAG 2.1 AA)
  - [ ] Unit tests achieve 90%+ code coverage
  - [ ] Component documentation is complete with usage examples

  ---

  ### **Implementation Notes**
  - Use {{ team_standards.testing_framework }} for component testing
  - Follow {{ team_standards.code_style }} code style guidelines  
  - Implement {{ team_standards.accessibility_level }} accessibility standards
  - Use design system hooks for consistent theming
  - Example: Use `useComponentTheme` hook for consistent styling  

  ---

  ### **Testing Strategy**
  - [ ] Unit Tests ({{ team_standards.testing_framework }})
  - [ ] Accessibility Checks (axe-core integration)  
  - [ ] Visual Regression Tests (Chromatic/Percy)
  - [ ] Integration tests with related components

  ---

  ### **Design Reference**
  **Figma Frame:** {{ figma_url }}  
  **ðŸ“¸ Design Screenshot**: !{{ figma.screenshot_filename }}|thumbnail!
  **Design Status:** {{ design_status }}

  ---

  ### **Estimation**
  **Effort:** {{ story_points }} Story Points  
  **Due Date:** {{ project.due_date }}

  ---

  <!-- START: ai_context_markers -->
  **AI Assistant Context:**
  - Component Type: {{ component_name }}
  - Technology Stack: {{ technologies }}
  - Complexity Level: {{ calculated.complexity }}
  - Design Reference: {{ figma_url }}
  <!-- END: ai_context_markers -->