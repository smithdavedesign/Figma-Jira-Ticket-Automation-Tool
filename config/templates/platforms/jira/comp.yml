meta:
  platform: jira
  document_type: component
  version: 1.0.0
  last_updated: 2025-10-30
  status: stable
  inherits_from: base.yml

# Template with base variables merged automatically by the engine
template:
  
  # Jira-specific overrides
  title: "[{{ project.component_prefix | default('UI') }}] {{ figma.component_name }} Component"
  issue_type: Task
  priority: "{{ calculated.priority | default('Medium') }}"
  labels: ["component", "ui", "{{ project.tech_stack.0 | lowercase }}"]
  
  # Content template for Jira tickets
  content: |
    ## 🎯 Component Overview
    
    Implement the **{{ figma.component_name }}** component from the design specifications.
    
    **📋 Quick Details:**
    - **Component Type**: {{ figma.component_type | default('UI Component') }}
    - **Tech Stack**: {% if project.tech_stack %}{{ project.tech_stack | join(', ') }}{% else %}🔧 *Enhancement Needed: Tech stack not specified*{% endif %}
    - **Priority**: {{ calculated.priority | default('Medium') }}
    - **Story Points**: {{ calculated.story_points | default('5') }}
    - **Design Status**: {{ figma.design_status | default('Ready for Development') }}
    
    ## 🎨 Design References
    
    **🔗 Figma Design**: [View Component]({{ figma.live_link }})
    **📸 Screenshot**: {{ figma.screenshot_markdown.jira | default('!screenshot.png|thumbnail!') }}
    
    **🎨 Design Tokens**:
    {% if figma.extracted_colors %}
    - **Colors**: {{ figma.extracted_colors }}
    {% else %}
    - **Colors**: 🔧 *Enhancement Needed: Run enhanced context extraction for color tokens*
    {% endif %}
    {% if figma.extracted_typography %}
    - **Typography**: {{ figma.extracted_typography }}
    {% else %}
    - **Typography**: 🔧 *Enhancement Needed: Run enhanced context extraction for typography*
    {% endif %}
    {% if calculated.design_analysis %}
    
    **🎯 Design Analysis**: {{ calculated.design_analysis }}
    {% else %}
    
    **🎯 Design Analysis**: 🔧 *Enhancement Needed: Use AI-powered analysis or enhanced context extraction for detailed design insights*
    {% endif %}
    
    ## ✅ Acceptance Criteria
    
    - [ ] **Visual Accuracy**: Component matches design specifications exactly
    - [ ] **Responsive Design**: Works across all supported breakpoints (mobile, tablet, desktop)
    - [ ] **Accessibility**: Meets WCAG 2.1 AA standards with proper ARIA labels
    - [ ] **Design System Compliance**: Uses approved design tokens and follows naming conventions
    - [ ] **Testing**: Unit tests with {{ project.testing_framework | default('Jest + RTL') }}
    - [ ] **Performance**: Component renders efficiently with no unnecessary re-renders
    - [ ] **Documentation**: Component documented in Storybook with all variants
    
    ## 🔧 Technical Requirements
    
    **Implementation Stack:**
    {% if project.tech_stack %}
    {% for tech in project.tech_stack %}
    - {{ tech }}
    {% endfor %}
    {% else %}
    - 🔧 *Enhancement Needed: Specify tech stack in request*
    - React (assumed)
    - TypeScript (recommended)
    {% endif %}
    
    **Component Structure:**
    ```
    {{ figma.component_name }}/
    ├── {{ figma.component_name }}.tsx          # Main component
    ├── {{ figma.component_name }}.module.css   # Component styles
    ├── {{ figma.component_name }}.test.tsx     # Unit tests
    ├── {{ figma.component_name }}.stories.tsx  # Storybook stories
    ├── types.ts                                # TypeScript interfaces
    └── index.ts                                # Export file
    ```
    
    {% if calculated.complexity == 'complex' %}
    ## ⚠️  Complexity Analysis
    
    **High Complexity Component** ({{ calculated.hours }} hours estimated)
    - **Confidence Level**: {{ calculated.confidence * 100 }}%
    {% if calculated.risk_factors %}
    - **Risk Factors**: {{ calculated.risk_factors | join(', ') }}
    {% else %}
    - **Risk Factors**: 🔧 *Enhancement Needed: Use AI analysis for risk assessment*
    {% endif %}
    {% if calculated.similar_components %}
    - **Similar Components**: {{ calculated.similar_components | join(', ') }}
    {% else %}
    - **Similar Components**: 🔧 *Enhancement Needed: Component similarity analysis not available*
    {% endif %}
    {% else %}
    ## 📊 Complexity Analysis
    
    **{{ calculated.complexity | capitalize | default('Medium') }} Complexity Component** ({{ calculated.hours | default('4-6') }} hours estimated)
    - **Confidence Level**: {{ calculated.confidence * 100 | default('75') }}%
    - **Analysis**: 🔧 *Enhancement Available: Use AI-powered analysis for detailed complexity assessment*
    {% endif %}
    
    ## 📋 Implementation Tasks
    
    - [ ] **Setup**: Create component file structure
    - [ ] **Types**: Define TypeScript interfaces and prop types
    - [ ] **Styling**: Implement CSS with design tokens
    - [ ] **Logic**: Add component behavior and state management
    - [ ] **Testing**: Write comprehensive unit tests
    - [ ] **Stories**: Create Storybook documentation
    - [ ] **Review**: Code review and accessibility audit
    
    {% if authoring.notes != 'Authoring Notes Not Found' %}
    ## 📝 AEM Authoring Notes
    
    {{ authoring.notes }}
    
    **Technical Details:**
    - **Component Path**: {{ authoring.component_path }}
    - **CQ Template**: {{ authoring.cq_template }}
    - **Touch UI Required**: {{ authoring.touch_ui_required }}
    {% endif %}
    
    ## 🔗 Resources
    
    - **Design System**: [Component Library]({{ project.component_library_url | default('https://storybook.company.com') }})
    - **Accessibility**: [WCAG Guidelines]({{ project.accessibility_url | default('https://accessibility.company.com') }})
    - **Testing**: [Testing Standards]({{ project.testing_standards_url | default('https://testing.company.com') }})
    - **Figma**: [Design Specs]({{ figma.live_link }})
    
    ---
    
    **Generated**: {{ 'now' | date('%Y-%m-%d %H:%M') }} via Universal Template System  
    **Template**: jira/component.yml → base.yml  
        **Confidence**: {{ calculated.confidence * 100 }}% | **Estimated Hours**: {{ calculated.hours }}
